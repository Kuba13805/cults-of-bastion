//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.2
//     from Assets/PlayerInputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @PlayerInputControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputControls"",
    ""maps"": [
        {
            ""name"": ""CityViewActions"",
            ""id"": ""39a4eb75-9a9b-4bc6-ae70-6904f883a232"",
            ""actions"": [
                {
                    ""name"": ""MoveCityCamera"",
                    ""type"": ""Value"",
                    ""id"": ""dbaddbf6-87ba-4893-b9ac-593bebbf6269"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCityCamera"",
                    ""type"": ""Value"",
                    ""id"": ""c60c0b8b-8956-46c4-97fb-e9ba2fa3cc93"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomCityCamera"",
                    ""type"": ""Value"",
                    ""id"": ""07916658-8f89-416d-a5f7-78ebbd45666d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FocusOnLocation"",
                    ""type"": ""Button"",
                    ""id"": ""01334cec-fc52-479e-bf1b-54b3149bd8b9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectLocation"",
                    ""type"": ""Button"",
                    ""id"": ""3efd7cbb-8f63-481d-99bc-8f7408f3b5d7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractWithLocation"",
                    ""type"": ""Button"",
                    ""id"": ""ef9f6df6-2c71-4ee1-9f7b-8f82d2288fa6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchRotation"",
                    ""type"": ""Button"",
                    ""id"": ""cf29adda-0160-4b2c-986f-21f816488dae"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauzeGame"",
                    ""type"": ""Button"",
                    ""id"": ""26b283a2-450b-452f-ab34-a24344f612b6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResumeGameNormalSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""ab5cec8e-075a-435b-8c80-33dc0c04b2d1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResumeGameHighSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""d5227bd8-41ad-4025-bebb-025266988005"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""748ad95d-a515-4845-a596-00c56d743420"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCityCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8f6c49b9-9f80-4ee6-8656-418f49e6c83d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6de116b0-8bcd-413a-9e21-bb9573c06762"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b14db454-9f23-41f3-9946-6bfd09e4357e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7754c158-05aa-457e-8bfc-440b1e11ee76"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""45d1ac6d-0c39-4513-9726-7eed5221803b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3bde4498-05f2-46bf-b189-c0c5e9dd921b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCityCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""73614ed1-eeaf-41da-bbcb-32fb29771296"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6cdadba0-8fa2-4bab-be9b-b0894055d867"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""90f72179-98d6-4668-b0ad-7084ee7aead0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCityCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06258310-94ef-4748-aea7-4323497b999b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""MultiTap(tapDelay=0.5)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusOnLocation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5398b213-4c4f-4618-9e83-ae962a6c943a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectLocation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e343941-8387-4505-addf-98fe92f0c920"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractWithLocation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24364eee-1dc8-4856-9721-e911ceadb184"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ec7371e-871b-46ab-9424-69bec6cf7961"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3f61112-1b39-492e-a4bd-9577c0048c55"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b685614-eaba-4eab-a66b-c0b02547b4b2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauzeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0df818a-4297-49ff-b987-d066c2d17756"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResumeGameNormalSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6c1c163-3365-440a-9ba7-7254e58a0470"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResumeGameHighSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CityViewActions
        m_CityViewActions = asset.FindActionMap("CityViewActions", throwIfNotFound: true);
        m_CityViewActions_MoveCityCamera = m_CityViewActions.FindAction("MoveCityCamera", throwIfNotFound: true);
        m_CityViewActions_RotateCityCamera = m_CityViewActions.FindAction("RotateCityCamera", throwIfNotFound: true);
        m_CityViewActions_ZoomCityCamera = m_CityViewActions.FindAction("ZoomCityCamera", throwIfNotFound: true);
        m_CityViewActions_FocusOnLocation = m_CityViewActions.FindAction("FocusOnLocation", throwIfNotFound: true);
        m_CityViewActions_SelectLocation = m_CityViewActions.FindAction("SelectLocation", throwIfNotFound: true);
        m_CityViewActions_InteractWithLocation = m_CityViewActions.FindAction("InteractWithLocation", throwIfNotFound: true);
        m_CityViewActions_SwitchRotation = m_CityViewActions.FindAction("SwitchRotation", throwIfNotFound: true);
        m_CityViewActions_PauzeGame = m_CityViewActions.FindAction("PauzeGame", throwIfNotFound: true);
        m_CityViewActions_ResumeGameNormalSpeed = m_CityViewActions.FindAction("ResumeGameNormalSpeed", throwIfNotFound: true);
        m_CityViewActions_ResumeGameHighSpeed = m_CityViewActions.FindAction("ResumeGameHighSpeed", throwIfNotFound: true);
    }

    ~@PlayerInputControls()
    {
        Debug.Assert(!m_CityViewActions.enabled, "This will cause a leak and performance issues, PlayerInputControls.CityViewActions.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CityViewActions
    private readonly InputActionMap m_CityViewActions;
    private List<ICityViewActionsActions> m_CityViewActionsActionsCallbackInterfaces = new List<ICityViewActionsActions>();
    private readonly InputAction m_CityViewActions_MoveCityCamera;
    private readonly InputAction m_CityViewActions_RotateCityCamera;
    private readonly InputAction m_CityViewActions_ZoomCityCamera;
    private readonly InputAction m_CityViewActions_FocusOnLocation;
    private readonly InputAction m_CityViewActions_SelectLocation;
    private readonly InputAction m_CityViewActions_InteractWithLocation;
    private readonly InputAction m_CityViewActions_SwitchRotation;
    private readonly InputAction m_CityViewActions_PauzeGame;
    private readonly InputAction m_CityViewActions_ResumeGameNormalSpeed;
    private readonly InputAction m_CityViewActions_ResumeGameHighSpeed;
    public struct CityViewActionsActions
    {
        private @PlayerInputControls m_Wrapper;
        public CityViewActionsActions(@PlayerInputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCityCamera => m_Wrapper.m_CityViewActions_MoveCityCamera;
        public InputAction @RotateCityCamera => m_Wrapper.m_CityViewActions_RotateCityCamera;
        public InputAction @ZoomCityCamera => m_Wrapper.m_CityViewActions_ZoomCityCamera;
        public InputAction @FocusOnLocation => m_Wrapper.m_CityViewActions_FocusOnLocation;
        public InputAction @SelectLocation => m_Wrapper.m_CityViewActions_SelectLocation;
        public InputAction @InteractWithLocation => m_Wrapper.m_CityViewActions_InteractWithLocation;
        public InputAction @SwitchRotation => m_Wrapper.m_CityViewActions_SwitchRotation;
        public InputAction @PauzeGame => m_Wrapper.m_CityViewActions_PauzeGame;
        public InputAction @ResumeGameNormalSpeed => m_Wrapper.m_CityViewActions_ResumeGameNormalSpeed;
        public InputAction @ResumeGameHighSpeed => m_Wrapper.m_CityViewActions_ResumeGameHighSpeed;
        public InputActionMap Get() { return m_Wrapper.m_CityViewActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CityViewActionsActions set) { return set.Get(); }
        public void AddCallbacks(ICityViewActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_CityViewActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CityViewActionsActionsCallbackInterfaces.Add(instance);
            @MoveCityCamera.started += instance.OnMoveCityCamera;
            @MoveCityCamera.performed += instance.OnMoveCityCamera;
            @MoveCityCamera.canceled += instance.OnMoveCityCamera;
            @RotateCityCamera.started += instance.OnRotateCityCamera;
            @RotateCityCamera.performed += instance.OnRotateCityCamera;
            @RotateCityCamera.canceled += instance.OnRotateCityCamera;
            @ZoomCityCamera.started += instance.OnZoomCityCamera;
            @ZoomCityCamera.performed += instance.OnZoomCityCamera;
            @ZoomCityCamera.canceled += instance.OnZoomCityCamera;
            @FocusOnLocation.started += instance.OnFocusOnLocation;
            @FocusOnLocation.performed += instance.OnFocusOnLocation;
            @FocusOnLocation.canceled += instance.OnFocusOnLocation;
            @SelectLocation.started += instance.OnSelectLocation;
            @SelectLocation.performed += instance.OnSelectLocation;
            @SelectLocation.canceled += instance.OnSelectLocation;
            @InteractWithLocation.started += instance.OnInteractWithLocation;
            @InteractWithLocation.performed += instance.OnInteractWithLocation;
            @InteractWithLocation.canceled += instance.OnInteractWithLocation;
            @SwitchRotation.started += instance.OnSwitchRotation;
            @SwitchRotation.performed += instance.OnSwitchRotation;
            @SwitchRotation.canceled += instance.OnSwitchRotation;
            @PauzeGame.started += instance.OnPauzeGame;
            @PauzeGame.performed += instance.OnPauzeGame;
            @PauzeGame.canceled += instance.OnPauzeGame;
            @ResumeGameNormalSpeed.started += instance.OnResumeGameNormalSpeed;
            @ResumeGameNormalSpeed.performed += instance.OnResumeGameNormalSpeed;
            @ResumeGameNormalSpeed.canceled += instance.OnResumeGameNormalSpeed;
            @ResumeGameHighSpeed.started += instance.OnResumeGameHighSpeed;
            @ResumeGameHighSpeed.performed += instance.OnResumeGameHighSpeed;
            @ResumeGameHighSpeed.canceled += instance.OnResumeGameHighSpeed;
        }

        private void UnregisterCallbacks(ICityViewActionsActions instance)
        {
            @MoveCityCamera.started -= instance.OnMoveCityCamera;
            @MoveCityCamera.performed -= instance.OnMoveCityCamera;
            @MoveCityCamera.canceled -= instance.OnMoveCityCamera;
            @RotateCityCamera.started -= instance.OnRotateCityCamera;
            @RotateCityCamera.performed -= instance.OnRotateCityCamera;
            @RotateCityCamera.canceled -= instance.OnRotateCityCamera;
            @ZoomCityCamera.started -= instance.OnZoomCityCamera;
            @ZoomCityCamera.performed -= instance.OnZoomCityCamera;
            @ZoomCityCamera.canceled -= instance.OnZoomCityCamera;
            @FocusOnLocation.started -= instance.OnFocusOnLocation;
            @FocusOnLocation.performed -= instance.OnFocusOnLocation;
            @FocusOnLocation.canceled -= instance.OnFocusOnLocation;
            @SelectLocation.started -= instance.OnSelectLocation;
            @SelectLocation.performed -= instance.OnSelectLocation;
            @SelectLocation.canceled -= instance.OnSelectLocation;
            @InteractWithLocation.started -= instance.OnInteractWithLocation;
            @InteractWithLocation.performed -= instance.OnInteractWithLocation;
            @InteractWithLocation.canceled -= instance.OnInteractWithLocation;
            @SwitchRotation.started -= instance.OnSwitchRotation;
            @SwitchRotation.performed -= instance.OnSwitchRotation;
            @SwitchRotation.canceled -= instance.OnSwitchRotation;
            @PauzeGame.started -= instance.OnPauzeGame;
            @PauzeGame.performed -= instance.OnPauzeGame;
            @PauzeGame.canceled -= instance.OnPauzeGame;
            @ResumeGameNormalSpeed.started -= instance.OnResumeGameNormalSpeed;
            @ResumeGameNormalSpeed.performed -= instance.OnResumeGameNormalSpeed;
            @ResumeGameNormalSpeed.canceled -= instance.OnResumeGameNormalSpeed;
            @ResumeGameHighSpeed.started -= instance.OnResumeGameHighSpeed;
            @ResumeGameHighSpeed.performed -= instance.OnResumeGameHighSpeed;
            @ResumeGameHighSpeed.canceled -= instance.OnResumeGameHighSpeed;
        }

        public void RemoveCallbacks(ICityViewActionsActions instance)
        {
            if (m_Wrapper.m_CityViewActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICityViewActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_CityViewActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CityViewActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CityViewActionsActions @CityViewActions => new CityViewActionsActions(this);
    public interface ICityViewActionsActions
    {
        void OnMoveCityCamera(InputAction.CallbackContext context);
        void OnRotateCityCamera(InputAction.CallbackContext context);
        void OnZoomCityCamera(InputAction.CallbackContext context);
        void OnFocusOnLocation(InputAction.CallbackContext context);
        void OnSelectLocation(InputAction.CallbackContext context);
        void OnInteractWithLocation(InputAction.CallbackContext context);
        void OnSwitchRotation(InputAction.CallbackContext context);
        void OnPauzeGame(InputAction.CallbackContext context);
        void OnResumeGameNormalSpeed(InputAction.CallbackContext context);
        void OnResumeGameHighSpeed(InputAction.CallbackContext context);
    }
}
